external_components:
  - source: github://tjhorner/esphome-standing-desk
    components: [ standing_desk_height ]

substitutions:
  desk_height_name: "Desk Height"
  target_desk_height_name: "Target Desk Height"
  standing_desk_height_units: "in"
  standing_desk_variant: "auto"

uart:
  id: standing_desk_uart
  rx_pin: ${standing_desk_uart_rx_pin}
  baud_rate: 9600

sensor:
  - platform: standing_desk_height
    id: desk_height
    name: ${desk_height_name}
    unit_of_measurement: ${standing_desk_height_units}
    variant: ${standing_desk_variant}

output:
  - platform: gpio
    inverted: true
    id: standing_desk_up_pin
    pin:
      number: ${standing_desk_up_pin}
      allow_other_uses: true
    
  - platform: gpio
    inverted: true
    id: standing_desk_down_pin
    pin:
      number: ${standing_desk_down_pin}
      allow_other_uses: true

number:
  - platform: template
    id: target_desk_height
    name: ${target_desk_height_name}
    unit_of_measurement: ${standing_desk_height_units}
    restore_value: true
    optimistic: true
    min_value: ${standing_desk_min_height}
    max_value: ${standing_desk_max_height}
    step: 0.1
    set_action:
      then:
        - if:
            condition:
              lambda: "return id(desk_height)->get_last_read() > x;"
            then:
              - output.turn_on: standing_desk_down_pin
              - wait_until:
                  condition:
                    lambda: "return id(desk_height)->get_last_read() <= x + 0.4;"
                  timeout: 20s
              - output.turn_off: standing_desk_down_pin
            else:
              - output.turn_on: standing_desk_up_pin
              - wait_until:
                  condition:
                    lambda: "return id(desk_height)->get_last_read() >= x - 0.4;"
                  timeout: 20s
              - output.turn_off: standing_desk_up_pin
